# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `descope` gem.
# Please instead update this file by running `bin/tapioca gem descope`.


# Namespace for Ruby Descope logic
#
# source://descope//lib/descope/version.rb#4
module Descope; end

# source://descope//lib/descope/exception.rb#47
class Descope::AccessDenied < ::Descope::HTTPError; end

# source://descope//lib/descope/api/v1/management/common.rb#4
module Descope::Api; end

# source://descope//lib/descope/api/v1/management/common.rb#5
module Descope::Api::V1
  include ::Descope::Mixins::Validation
  include ::Descope::Api::V1::Management::Common
  include ::Descope::Api::V1::Management::User
  include ::Descope::Api::V1::Management::Flow
  include ::Descope::Api::V1::Management::AccessKey
  include ::Descope::Api::V1::Management::Tenant
  include ::Descope::Api::V1::Management::Permission
  include ::Descope::Api::V1::Management::Role
  include ::Descope::Api::V1::Management::Project
  include ::Descope::Api::V1::Management::Authz
  include ::Descope::Api::V1::Management::Audit
  include ::Descope::Api::V1::Management::SSOSettings
  include ::Descope::Api::V1::Management::SCIM
  include ::Descope::Api::V1::Management::Password
  include ::Descope::Api::V1::Management
  include ::Descope::Mixins::Common
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2
  include ::Descope::Api::V1::Session
  include ::Descope::Api::V1::Auth::Password
  include ::Descope::Api::V1::Auth::EnchantedLink
  include ::Descope::Api::V1::Auth::MagicLink
  include ::Descope::Api::V1::Auth::OAuth
  include ::Descope::Api::V1::Auth::OTP
  include ::Descope::Api::V1::Auth::SAML
  include ::Descope::Api::V1::Auth::TOTP
  include ::Descope::Api::V1::Auth
end

# Holds all the management API calls
#
# source://descope//lib/descope/api/v1/auth/password.rb#6
module Descope::Api::V1::Auth
  include ::Descope::Mixins::Common
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2
  include ::Descope::Api::V1::Auth::Password
  include ::Descope::Api::V1::Auth::EnchantedLink
  include ::Descope::Api::V1::Auth::MagicLink
  include ::Descope::Api::V1::Auth::OAuth
  include ::Descope::Api::V1::Auth::OTP
  include ::Descope::Api::V1::Auth::SAML
  include ::Descope::Api::V1::Auth::TOTP

  # source://descope//lib/descope/api/v1/auth.rb#44
  def exchange_access_key(access_key: T.unsafe(nil), login_options: T.unsafe(nil), audience: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#31
  def generate_jwt_response(response_body: T.unsafe(nil), refresh_cookie: T.unsafe(nil), audience: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#61
  def select_tenant(tenant_id: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#71
  def validate_permissions(jwt_response: T.unsafe(nil), permissions: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#122
  def validate_roles(jwt_response: T.unsafe(nil), roles: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#78
  def validate_tenant_permissions(jwt_response: T.unsafe(nil), tenant: T.unsafe(nil), permissions: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#128
  def validate_tenant_roles(jwt_response: T.unsafe(nil), tenant: T.unsafe(nil), roles: T.unsafe(nil)); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/api/v1/auth.rb#172
  def validate_token(token, _audience = T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth.rb#418
  def adjust_and_verify_delivery_method(method, login_id, user); end

  # source://descope//lib/descope/api/v1/auth.rb#268
  def adjust_properties(jwt_response, user_jwt); end

  # source://descope//lib/descope/api/v1/auth.rb#395
  def compose_url(base, method); end

  # @raise [Descope::ArgumentException]
  #
  # source://descope//lib/descope/api/v1/auth.rb#455
  def exchange_token(uri, code); end

  # source://descope//lib/descope/api/v1/auth.rb#445
  def extract_masked_address(response, method); end

  # source://descope//lib/descope/api/v1/auth.rb#318
  def fetch_public_keys; end

  # source://descope//lib/descope/api/v1/auth.rb#233
  def generate_auth_info(response_body, refresh_token, user_jwt, audience = T.unsafe(nil)); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/api/v1/auth.rb#406
  def get_login_id_by_method(method: T.unsafe(nil), user: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth.rb#306
  def jwt_get_unverified_header(token); end

  # source://descope//lib/descope/api/v1/auth.rb#337
  def validate_and_load_public_key(public_key); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/api/v1/auth.rb#383
  def validate_refresh_token_provided(login_options, refresh_token); end
end

# source://descope//lib/descope/api/v1/auth.rb#29
Descope::Api::V1::Auth::ALGORITHM_KEY = T.let(T.unsafe(nil), String)

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/enchantedlink.rb#8
module Descope::Api::V1::Auth::EnchantedLink
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#67
  def enchanted_link_get_session(pending_ref = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#13
  def enchanted_link_sign_in(login_id: T.unsafe(nil), uri: T.unsafe(nil), login_options: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#23
  def enchanted_link_sign_up(login_id: T.unsafe(nil), uri: T.unsafe(nil), user: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#39
  def enchanted_link_sign_up_or_in(login_id: T.unsafe(nil), uri: T.unsafe(nil), login_options: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#46
  def enchanted_link_update_user_email(login_id: T.unsafe(nil), email: T.unsafe(nil), uri: T.unsafe(nil), add_to_login_ids: T.unsafe(nil), on_merge_use_existing: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil), template_options: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#62
  def enchanted_link_verify_token(token = T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#106
  def enchanted_link_compose_sign_up_or_in_url; end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#75
  def enchanted_link_compose_signin_body(login_id, uri, login_options); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#98
  def enchanted_link_compose_signin_url; end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#110
  def enchanted_link_compose_signup_body(login_id, uri, user); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#102
  def enchanted_link_compose_signup_url; end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#126
  def enchanted_link_compose_update_user_email_body(login_id, email, add_to_login_ids, on_merge_use_existing); end

  # source://descope//lib/descope/api/v1/auth/enchantedlink.rb#140
  def enchantedlink_user_compose_update_body(login_id: T.unsafe(nil), name: T.unsafe(nil), phone: T.unsafe(nil), email: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil)); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/magiclink.rb#8
module Descope::Api::V1::Auth::MagicLink
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#26
  def magiclink_sign_in(method: T.unsafe(nil), login_id: T.unsafe(nil), uri: T.unsafe(nil), login_options: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#13
  def magiclink_sign_up(method: T.unsafe(nil), login_id: T.unsafe(nil), uri: T.unsafe(nil), user: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#35
  def magiclink_sign_up_or_in(method: T.unsafe(nil), login_id: T.unsafe(nil), uri: T.unsafe(nil), login_options: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#48
  def magiclink_update_user_email(login_id: T.unsafe(nil), email: T.unsafe(nil), uri: T.unsafe(nil), add_to_login_ids: T.unsafe(nil), on_merge_use_existing: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil), template_options: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#62
  def magiclink_update_user_phone(login_id: T.unsafe(nil), phone: T.unsafe(nil), uri: T.unsafe(nil), add_to_login_ids: T.unsafe(nil), on_merge_use_existing: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil), template_options: T.unsafe(nil), method: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#42
  def magiclink_verify_token(token = T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#88
  def magiclink_compose_sign_up_or_in_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#110
  def magiclink_compose_signin_body(login_id, uri, login_options); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#78
  def magiclink_compose_signin_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#93
  def magiclink_compose_signup_body(login_id, uri, user = T.unsafe(nil), method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#83
  def magiclink_compose_signup_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#133
  def magiclink_compose_update_user_email_body(login_id, email, uri, add_to_login_ids, on_merge_use_existing); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#143
  def magiclink_compose_update_user_phone_body(login_id, phone, uri, add_to_login_ids, on_merge_use_existing); end

  # source://descope//lib/descope/api/v1/auth/magiclink.rb#154
  def magiclink_user_compose_update_body(login_id: T.unsafe(nil), name: T.unsafe(nil), phone: T.unsafe(nil), email: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil)); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/oauth.rb#9
module Descope::Api::V1::Auth::OAuth
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/oauth.rb#26
  def oauth_create_redirect_url_for_sign_in_request(stepup: T.unsafe(nil), custom_claims: T.unsafe(nil), mfa: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/oauth.rb#37
  def oauth_create_redirect_url_for_sign_up_request(stepup: T.unsafe(nil), custom_claims: T.unsafe(nil), mfa: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/oauth.rb#22
  def oauth_exchange_token(code = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/oauth.rb#14
  def oauth_start(provider: T.unsafe(nil), return_url: T.unsafe(nil), prompt: T.unsafe(nil), login_options: T.unsafe(nil), refresh_token: T.unsafe(nil), template_options: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/oauth.rb#50
  def compose_start_params(login_options: T.unsafe(nil), template_options: T.unsafe(nil)); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/otp.rb#8
module Descope::Api::V1::Auth::OTP
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/otp.rb#13
  def otp_sign_in(method: T.unsafe(nil), login_id: T.unsafe(nil), login_options: T.unsafe(nil), refresh_token: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/api/v1/auth/otp.rb#25
  def otp_sign_up(method: T.unsafe(nil), login_id: T.unsafe(nil), user: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#39
  def otp_sign_up_or_in(method: T.unsafe(nil), login_id: T.unsafe(nil), login_options: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#63
  def otp_update_user_email(login_id: T.unsafe(nil), email: T.unsafe(nil), refresh_token: T.unsafe(nil), add_to_login_ids: T.unsafe(nil), on_merge_use_existing: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#80
  def otp_update_user_phone(method: T.unsafe(nil), login_id: T.unsafe(nil), phone: T.unsafe(nil), refresh_token: T.unsafe(nil), add_to_login_ids: T.unsafe(nil), on_merge_use_existing: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#52
  def otp_verify_code(method: T.unsafe(nil), login_id: T.unsafe(nil), code: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/otp.rb#112
  def otp_compose_sign_up_or_in_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#145
  def otp_compose_signin_body(login_id, login_options, provider_id, template_id, sso_app_id); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#102
  def otp_compose_signin_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#128
  def otp_compose_signup_body(method, login_id, user, provider_id, template_id); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#107
  def otp_compose_signup_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#122
  def otp_compose_update_phone_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#117
  def otp_compose_verify_code_url(method = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/otp.rb#170
  def otp_user_compose_update_body(login_id: T.unsafe(nil), name: T.unsafe(nil), phone: T.unsafe(nil), email: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil)); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/password.rb#8
module Descope::Api::V1::Auth::Password
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/password.rb#69
  def get_password_policy(refresh_token = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/password.rb#44
  def password_replace(login_id: T.unsafe(nil), old_password: T.unsafe(nil), new_password: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/password.rb#74
  def password_reset(login_id: T.unsafe(nil), redirect_url: T.unsafe(nil), provider_id: T.unsafe(nil), template_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/password.rb#28
  def password_sign_in(login_id: T.unsafe(nil), password: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/password.rb#13
  def password_sign_up(login_id: T.unsafe(nil), password: T.unsafe(nil), user: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/password.rb#57
  def password_update(login_id: T.unsafe(nil), new_password: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/password.rb#84
  def password_user_compose_update_body(login_id: T.unsafe(nil), name: T.unsafe(nil), phone: T.unsafe(nil), email: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil)); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/saml.rb#10
module Descope::Api::V1::Auth::SAML
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/saml.rb#31
  def saml_exchange_token(code = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/saml.rb#16
  def saml_sign_in(tenant: T.unsafe(nil), redirect_url: T.unsafe(nil), prompt: T.unsafe(nil), stepup: T.unsafe(nil), mfa: T.unsafe(nil), custom_claims: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/saml.rb#37
  def compose_saml_signin_url(tenant, redirect_url, prompt); end
end

# Holds all the password API calls
#
# source://descope//lib/descope/api/v1/auth/totp.rb#8
module Descope::Api::V1::Auth::TOTP
  include ::Descope::Mixins::Validation
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/auth/totp.rb#37
  def totp_add_update_key(login_id: T.unsafe(nil), refresh_token: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/totp.rb#13
  def totp_sign_in_code(login_id: T.unsafe(nil), login_options: T.unsafe(nil), code: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/auth/totp.rb#23
  def totp_sign_up(login_id: T.unsafe(nil), user: T.unsafe(nil), sso_app_id: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/auth/totp.rb#47
  def totp_compose_signin_body(login_id, code, login_options); end
end

# Holds all the management API calls
#
# source://descope//lib/descope/api/v1/management/common.rb#6
module Descope::Api::V1::Management
  include ::Descope::Mixins::Validation
  include ::Descope::Api::V1::Management::Common
  include ::Descope::Api::V1::Management::User
  include ::Descope::Api::V1::Management::Flow
  include ::Descope::Api::V1::Management::AccessKey
  include ::Descope::Api::V1::Management::Tenant
  include ::Descope::Api::V1::Management::Permission
  include ::Descope::Api::V1::Management::Role
  include ::Descope::Api::V1::Management::Project
  include ::Descope::Api::V1::Management::Authz
  include ::Descope::Api::V1::Management::Audit
  include ::Descope::Api::V1::Management::SSOSettings
  include ::Descope::Api::V1::Management::SCIM
  include ::Descope::Api::V1::Management::Password
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/access_key.rb#8
module Descope::Api::V1::Management::AccessKey
  include ::Descope::Mixins::Validation
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/access_key.rb#22
  def access_key_compose_create_body(name, expire_time, role_names, key_tenants, custom_claims); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#66
  def activate_access_key(id); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#12
  def create_access_key(name: T.unsafe(nil), expire_time: T.unsafe(nil), role_names: T.unsafe(nil), key_tenants: T.unsafe(nil), custom_claims: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#59
  def deactivate_access_key(id); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#73
  def delete_access_key(id); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#32
  def load_access_key(id); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#40
  def search_all_access_keys(tenant_ids = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/access_key.rb#49
  def update_access_key(id: T.unsafe(nil), name: T.unsafe(nil)); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/audit.rb#8
module Descope::Api::V1::Management::Audit
  include ::Descope::Api::V1::Management::Common

  # @raise [Descope::AuthException]
  #
  # source://descope//lib/descope/api/v1/management/audit.rb#11
  def audit_search(user_ids: T.unsafe(nil), actions: T.unsafe(nil), exclude_actions: T.unsafe(nil), devices: T.unsafe(nil), methods: T.unsafe(nil), geos: T.unsafe(nil), remote_addresses: T.unsafe(nil), login_ids: T.unsafe(nil), tenants: T.unsafe(nil), no_tenants: T.unsafe(nil), text: T.unsafe(nil), from_ts: T.unsafe(nil), to_ts: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/management/audit.rb#63
  def convert_audit_record(audit); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/authz.rb#8
module Descope::Api::V1::Management::Authz
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/authz.rb#91
  def authz_create_relations(relations = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#65
  def authz_delete_namespace(name: T.unsafe(nil), schema_name: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#84
  def authz_delete_relation_definition(name: T.unsafe(nil), namespace: T.unsafe(nil), schema_name: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#120
  def authz_delete_relations(relations = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#125
  def authz_delete_relations_for_resources(resources = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#46
  def authz_delete_schema; end

  # @return [Boolean]
  #
  # source://descope//lib/descope/api/v1/management/authz.rb#130
  def authz_has_relations?(relation_queries = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#51
  def authz_load_schema; end

  # source://descope//lib/descope/api/v1/management/authz.rb#145
  def authz_resource_relations(resources: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#56
  def authz_save_namespace(namespace: T.unsafe(nil), old_name: T.unsafe(nil), schema_name: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#72
  def authz_save_relation_definition(relation_definition: T.unsafe(nil), namespace: T.unsafe(nil), old_name: T.unsafe(nil), schema_name: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#11
  def authz_save_schema(schema: T.unsafe(nil), upgrade: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/authz.rb#149
  def authz_target_relations(targets: T.unsafe(nil)); end

  # @raise [Descope::AuthException]
  # @return [Boolean]
  #
  # source://descope//lib/descope/api/v1/management/authz.rb#154
  def authz_what_can_target_access?(target: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://descope//lib/descope/api/v1/management/authz.rb#135
  def authz_who_can_access?(resource: T.unsafe(nil), relation_definition: T.unsafe(nil), namespace: T.unsafe(nil)); end
end

# Common Management constants
#
# source://descope//lib/descope/api/v1/management/common.rb#8
module Descope::Api::V1::Management::Common
  # source://descope//lib/descope/api/v1/management/common.rb#128
  def associated_tenants_to_hash_array(associated_tenants = T.unsafe(nil)); end
end

# source://descope//lib/descope/api/v1/management/common.rb#51
Descope::Api::V1::Management::Common::ACCESS_KEYS_SEARCH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#54
Descope::Api::V1::Management::Common::ACCESS_KEY_ACTIVATE_PATH = T.let(T.unsafe(nil), String)

# access key
#
# source://descope//lib/descope/api/v1/management/common.rb#49
Descope::Api::V1::Management::Common::ACCESS_KEY_CREATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#53
Descope::Api::V1::Management::Common::ACCESS_KEY_DEACTIVATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#55
Descope::Api::V1::Management::Common::ACCESS_KEY_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#50
Descope::Api::V1::Management::Common::ACCESS_KEY_LOAD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#52
Descope::Api::V1::Management::Common::ACCESS_KEY_UPDATE_PATH = T.let(T.unsafe(nil), String)

# Audit
#
# source://descope//lib/descope/api/v1/management/common.rb#102
Descope::Api::V1::Management::Common::AUDIT_SEARCH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#109
Descope::Api::V1::Management::Common::AUTHZ_NS_DELETE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#108
Descope::Api::V1::Management::Common::AUTHZ_NS_SAVE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#111
Descope::Api::V1::Management::Common::AUTHZ_RD_DELETE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#110
Descope::Api::V1::Management::Common::AUTHZ_RD_SAVE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#112
Descope::Api::V1::Management::Common::AUTHZ_RE_CREATE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#113
Descope::Api::V1::Management::Common::AUTHZ_RE_DELETE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#114
Descope::Api::V1::Management::Common::AUTHZ_RE_DELETE_RESOURCES = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#115
Descope::Api::V1::Management::Common::AUTHZ_RE_HAS_RELATIONS = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#117
Descope::Api::V1::Management::Common::AUTHZ_RE_RESOURCE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#118
Descope::Api::V1::Management::Common::AUTHZ_RE_TARGETS = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#119
Descope::Api::V1::Management::Common::AUTHZ_RE_TARGET_ALL = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#116
Descope::Api::V1::Management::Common::AUTHZ_RE_WHO = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#106
Descope::Api::V1::Management::Common::AUTHZ_SCHEMA_DELETE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#107
Descope::Api::V1::Management::Common::AUTHZ_SCHEMA_LOAD = T.let(T.unsafe(nil), String)

# Authz ReBAC
#
# source://descope//lib/descope/api/v1/management/common.rb#105
Descope::Api::V1::Management::Common::AUTHZ_SCHEMA_SAVE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#90
Descope::Api::V1::Management::Common::FLOW_EXPORT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#89
Descope::Api::V1::Management::Common::FLOW_IMPORT_PATH = T.let(T.unsafe(nil), String)

# flow
#
# source://descope//lib/descope/api/v1/management/common.rb#88
Descope::Api::V1::Management::Common::FLOW_LIST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#98
Descope::Api::V1::Management::Common::GROUP_LOAD_ALL_FOR_MEMBER_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#99
Descope::Api::V1::Management::Common::GROUP_LOAD_ALL_GROUP_MEMBERS_PATH = T.let(T.unsafe(nil), String)

# group
#
# source://descope//lib/descope/api/v1/management/common.rb#97
Descope::Api::V1::Management::Common::GROUP_LOAD_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#16
Descope::Api::V1::Management::Common::PASSWORD_SETTINGS_PATH = T.let(T.unsafe(nil), String)

# permission
#
# source://descope//lib/descope/api/v1/management/common.rb#75
Descope::Api::V1::Management::Common::PERMISSION_CREATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#77
Descope::Api::V1::Management::Common::PERMISSION_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#78
Descope::Api::V1::Management::Common::PERMISSION_LOAD_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#76
Descope::Api::V1::Management::Common::PERMISSION_UPDATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#123
Descope::Api::V1::Management::Common::PROJECT_CLONE = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#126
Descope::Api::V1::Management::Common::PROJECT_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#124
Descope::Api::V1::Management::Common::PROJECT_EXPORT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#125
Descope::Api::V1::Management::Common::PROJECT_IMPORT_PATH = T.let(T.unsafe(nil), String)

# Project
#
# source://descope//lib/descope/api/v1/management/common.rb#122
Descope::Api::V1::Management::Common::PROJECT_UPDATE_NAME = T.let(T.unsafe(nil), String)

# role
#
# source://descope//lib/descope/api/v1/management/common.rb#81
Descope::Api::V1::Management::Common::ROLE_CREATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#83
Descope::Api::V1::Management::Common::ROLE_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#84
Descope::Api::V1::Management::Common::ROLE_LOAD_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#85
Descope::Api::V1::Management::Common::ROLE_SEARCH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#82
Descope::Api::V1::Management::Common::ROLE_UPDATE_PATH = T.let(T.unsafe(nil), String)

# SCIM
#
# source://descope//lib/descope/api/v1/management/common.rb#66
Descope::Api::V1::Management::Common::SCIM_GROUPS_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#67
Descope::Api::V1::Management::Common::SCIM_RESOURCE_TYPES_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#68
Descope::Api::V1::Management::Common::SCIM_SERVICE_PROVIDER_CONFIG_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#69
Descope::Api::V1::Management::Common::SCIM_USERS_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#60
Descope::Api::V1::Management::Common::SSO_OIDC_CREATE_APP_PATH = T.let(T.unsafe(nil), String)

# configure ssp settings via oidc
#
# source://descope//lib/descope/api/v1/management/common.rb#59
Descope::Api::V1::Management::Common::SSO_OIDC_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#61
Descope::Api::V1::Management::Common::SSO_OIDC_UPDATE_APP_PATH = T.let(T.unsafe(nil), String)

# configure ssp settings via saml metadata
#
# source://descope//lib/descope/api/v1/management/common.rb#63
Descope::Api::V1::Management::Common::SSO_SAML_METADATA_PATH = T.let(T.unsafe(nil), String)

# configure ssp settings via saml
#
# source://descope//lib/descope/api/v1/management/common.rb#62
Descope::Api::V1::Management::Common::SSO_SAML_PATH = T.let(T.unsafe(nil), String)

# sso
#
# source://descope//lib/descope/api/v1/management/common.rb#58
Descope::Api::V1::Management::Common::SSO_SETTINGS_PATH = T.let(T.unsafe(nil), String)

# tenant
#
# source://descope//lib/descope/api/v1/management/common.rb#10
Descope::Api::V1::Management::Common::TENANT_CREATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#12
Descope::Api::V1::Management::Common::TENANT_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#14
Descope::Api::V1::Management::Common::TENANT_LOAD_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#13
Descope::Api::V1::Management::Common::TENANT_LOAD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#15
Descope::Api::V1::Management::Common::TENANT_SEARCH_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#11
Descope::Api::V1::Management::Common::TENANT_UPDATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#94
Descope::Api::V1::Management::Common::THEME_EXPORT_PATH = T.let(T.unsafe(nil), String)

# theme
#
# source://descope//lib/descope/api/v1/management/common.rb#93
Descope::Api::V1::Management::Common::THEME_IMPORT_PATH = T.let(T.unsafe(nil), String)

# jwt
#
# source://descope//lib/descope/api/v1/management/common.rb#72
Descope::Api::V1::Management::Common::UPDATE_JWT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#26
Descope::Api::V1::Management::Common::USERS_SEARCH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#35
Descope::Api::V1::Management::Common::USER_ADD_ROLE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#41
Descope::Api::V1::Management::Common::USER_ADD_TENANT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#20
Descope::Api::V1::Management::Common::USER_CREATE_BATCH_PATH = T.let(T.unsafe(nil), String)

# user
#
# source://descope//lib/descope/api/v1/management/common.rb#19
Descope::Api::V1::Management::Common::USER_CREATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#24
Descope::Api::V1::Management::Common::USER_DELETE_ALL_TEST_USERS_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#22
Descope::Api::V1::Management::Common::USER_DELETE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#40
Descope::Api::V1::Management::Common::USER_EXPIRE_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#46
Descope::Api::V1::Management::Common::USER_GENERATE_EMBEDDED_LINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#45
Descope::Api::V1::Management::Common::USER_GENERATE_ENCHANTED_LINK_FOR_TEST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#44
Descope::Api::V1::Management::Common::USER_GENERATE_MAGIC_LINK_FOR_TEST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#43
Descope::Api::V1::Management::Common::USER_GENERATE_OTP_FOR_TEST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#27
Descope::Api::V1::Management::Common::USER_GET_PROVIDER_TOKEN = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#25
Descope::Api::V1::Management::Common::USER_LOAD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#23
Descope::Api::V1::Management::Common::USER_LOGOUT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#36
Descope::Api::V1::Management::Common::USER_REMOVE_ROLE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#42
Descope::Api::V1::Management::Common::USER_REMOVE_TENANT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#38
Descope::Api::V1::Management::Common::USER_SET_ACTIVE_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#39
Descope::Api::V1::Management::Common::USER_SET_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#37
Descope::Api::V1::Management::Common::USER_SET_TEMPORARY_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#34
Descope::Api::V1::Management::Common::USER_UPDATE_CUSTOM_ATTRIBUTE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#30
Descope::Api::V1::Management::Common::USER_UPDATE_EMAIL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#29
Descope::Api::V1::Management::Common::USER_UPDATE_LOGIN_ID_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#32
Descope::Api::V1::Management::Common::USER_UPDATE_NAME_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#21
Descope::Api::V1::Management::Common::USER_UPDATE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#31
Descope::Api::V1::Management::Common::USER_UPDATE_PHONE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#33
Descope::Api::V1::Management::Common::USER_UPDATE_PICTURE_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/api/v1/management/common.rb#28
Descope::Api::V1::Management::Common::USER_UPDATE_STATUS_PATH = T.let(T.unsafe(nil), String)

# Management API calls
#
# source://descope//lib/descope/api/v1/management/flow.rb#8
module Descope::Api::V1::Management::Flow
  include ::Descope::Api::V1::Management::Common

  # Export the given flow id flow and screens.
  #
  # @see https://docs.descope.com/api/openapi/flowmanagement/operation/ExportFlow/
  #
  # source://descope//lib/descope/api/v1/management/flow.rb#23
  def export_flow(flow_id = T.unsafe(nil)); end

  # Export the current project theme.
  #
  # @see https://docs.descope.com/api/openapi/flowmanagement/operation/ExportTheme/
  #
  # source://descope//lib/descope/api/v1/management/flow.rb#41
  def export_theme; end

  # Import the given flow and screens.
  #
  # @see https://docs.descope.com/api/openapi/flowmanagement/operation/ImportFlow/
  #
  # source://descope//lib/descope/api/v1/management/flow.rb#30
  def import_flow(flow_id: T.unsafe(nil), flow: T.unsafe(nil), screens: T.unsafe(nil)); end

  # Import the current project theme.
  #
  # @see https://docs.descope.com/api/openapi/flowmanagement/operation/ImportTheme/
  #
  # source://descope//lib/descope/api/v1/management/flow.rb#47
  def import_theme(theme); end

  # List all project flows
  # To list all flows, send an empty body such as: { } or { "ids": [] }.
  #
  # To search for a flow or several flows, send a body with the flowIds you want to search such as { "ids": ["sign-in"] } or { "ids": ["sign-in", "sign-up"] }.
  #
  # @see https://docs.descope.com/api/openapi/flowmanagement/operation/ListFlows/
  #
  # source://descope//lib/descope/api/v1/management/flow.rb#16
  def list_or_search_flows(ids = T.unsafe(nil)); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/password.rb#8
module Descope::Api::V1::Management::Password
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/password.rb#11
  def get_password_settings(tenant_id); end

  # source://descope//lib/descope/api/v1/management/password.rb#16
  def update_password_settings(settings); end

  private

  # source://descope//lib/descope/api/v1/management/password.rb#29
  def compose_settings_body(settings); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/permission.rb#8
module Descope::Api::V1::Management::Permission
  include ::Descope::Mixins::Validation
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/permission.rb#13
  def create_permission(name:, description: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/permission.rb#35
  def delete_permission(name = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/permission.rb#40
  def load_all_permissions; end

  # source://descope//lib/descope/api/v1/management/permission.rb#23
  def update_permission(name: T.unsafe(nil), new_name: T.unsafe(nil), description: T.unsafe(nil)); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/project.rb#8
module Descope::Api::V1::Management::Project
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/project.rb#39
  def clone_project(name: T.unsafe(nil), tag: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/project.rb#34
  def delete_project; end

  # source://descope//lib/descope/api/v1/management/project.rb#16
  def export_project; end

  # source://descope//lib/descope/api/v1/management/project.rb#26
  def import_project(files: T.unsafe(nil), excludes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/project.rb#11
  def rename_project(name); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/role.rb#8
module Descope::Api::V1::Management::Role
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/role.rb#11
  def create_role(name: T.unsafe(nil), description: T.unsafe(nil), permission_names: T.unsafe(nil), tenant_id: T.unsafe(nil)); end

  # @raise [Descope::ArgumentError]
  #
  # source://descope//lib/descope/api/v1/management/role.rb#37
  def delete_role(name: T.unsafe(nil), tenant_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/role.rb#46
  def load_all_roles; end

  # source://descope//lib/descope/api/v1/management/role.rb#51
  def search_roles(role_names: T.unsafe(nil), tenant_ids: T.unsafe(nil), role_name_like: T.unsafe(nil), permission_names: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/role.rb#23
  def update_role(name: T.unsafe(nil), new_name: T.unsafe(nil), description: T.unsafe(nil), permission_names: T.unsafe(nil), tenant_id: T.unsafe(nil)); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/scim.rb#8
module Descope::Api::V1::Management::SCIM
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/scim.rb#17
  def scim_create_group(group_id: T.unsafe(nil), display_name: T.unsafe(nil), members: T.unsafe(nil), external_id: T.unsafe(nil), excluded_attributes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#70
  def scim_create_user(user_id: T.unsafe(nil), display_name: T.unsafe(nil), emails: T.unsafe(nil), phone_numbers: T.unsafe(nil), active: T.unsafe(nil), name: T.unsafe(nil), user_name: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#39
  def scim_delete_group(group_id); end

  # source://descope//lib/descope/api/v1/management/scim.rb#92
  def scim_delete_user(user_id); end

  # source://descope//lib/descope/api/v1/management/scim.rb#24
  def scim_load_group(group_id: T.unsafe(nil), display_name: T.unsafe(nil), external_id: T.unsafe(nil), excluded_attributes: T.unsafe(nil)); end

  # SCIM Users
  #
  # source://descope//lib/descope/api/v1/management/scim.rb#54
  def scim_load_resource_types; end

  # source://descope//lib/descope/api/v1/management/scim.rb#59
  def scim_load_service_provider_config; end

  # source://descope//lib/descope/api/v1/management/scim.rb#78
  def scim_load_user(user_id); end

  # source://descope//lib/descope/api/v1/management/scim.rb#46
  def scim_patch_group(group_id: T.unsafe(nil), user_id: T.unsafe(nil), operations: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#99
  def scim_patch_user(user_id: T.unsafe(nil), group_id: T.unsafe(nil), operations: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#11
  def scim_search_groups(filter: T.unsafe(nil), start_index: T.unsafe(nil), count: T.unsafe(nil), excluded_attributes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#64
  def scim_search_users(filter: T.unsafe(nil), start_index: T.unsafe(nil), count: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#31
  def scim_update_group(group_id: T.unsafe(nil), display_name: T.unsafe(nil), members: T.unsafe(nil), external_id: T.unsafe(nil), excluded_attributes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/scim.rb#85
  def scim_update_user(user_id); end

  private

  # source://descope//lib/descope/api/v1/management/scim.rb#179
  def compose_operations_param(operations); end

  # source://descope//lib/descope/api/v1/management/scim.rb#118
  def compose_scim_create_group_body(group_id, display_name, members, external_id, excluded_attributes); end

  # source://descope//lib/descope/api/v1/management/scim.rb#128
  def compose_scim_create_group_url(group_id, display_name, external_id, excluded_attributes); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/api/v1/management/scim.rb#162
  def compose_scim_create_user_body(user_id, display_name, emails, phone_numbers, active, name, user_name); end

  # source://descope//lib/descope/api/v1/management/scim.rb#147
  def compose_scim_patch_group_url(group_id, user_id, operations); end

  # source://descope//lib/descope/api/v1/management/scim.rb#195
  def compose_scim_patch_user_body(user_id, group_id, operations); end

  # source://descope//lib/descope/api/v1/management/scim.rb#109
  def compose_scim_search_groups_url(filter, start_index, count, excluded_attributes); end

  # source://descope//lib/descope/api/v1/management/scim.rb#154
  def compose_scim_search_users_url(filter, start_index, count); end

  # source://descope//lib/descope/api/v1/management/scim.rb#137
  def compose_scim_update_group_body(group_id, display_name, members, external_id, excluded_attributes); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/sso_settings.rb#8
module Descope::Api::V1::Management::SSOSettings
  include ::Descope::Api::V1::Management::Common

  # @raise [Descope::ArgumentException]
  #
  # source://descope//lib/descope/api/v1/management/sso_settings.rb#43
  def configure_sso_oidc(tenant_id: T.unsafe(nil), settings: T.unsafe(nil), redirect_url: T.unsafe(nil), domain: T.unsafe(nil)); end

  # @raise [Descope::ArgumentException]
  #
  # source://descope//lib/descope/api/v1/management/sso_settings.rb#56
  def configure_sso_saml(tenant_id: T.unsafe(nil), settings: T.unsafe(nil), redirect_url: T.unsafe(nil), domain: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#69
  def configure_sso_saml_metadata(tenant_id: T.unsafe(nil), settings: T.unsafe(nil), redirect_url: T.unsafe(nil), domain: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#21
  def create_sso_oidc_app(id: T.unsafe(nil), name: T.unsafe(nil), description: T.unsafe(nil), enabled: T.unsafe(nil), logo: T.unsafe(nil), login_page_url: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#16
  def delete_sso_settings(tenant_id); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#11
  def get_sso_settings(tenant_id); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#32
  def update_sso_oidc_app(id: T.unsafe(nil), name: T.unsafe(nil), description: T.unsafe(nil), enabled: T.unsafe(nil), logo: T.unsafe(nil), login_page_url: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#137
  def attribute_mapping_to_hash(attribute_mapping); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#116
  def compose_metadata_body(tenant_id, settings, redirect_url, domain); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#77
  def compose_settings_body(settings); end

  # source://descope//lib/descope/api/v1/management/sso_settings.rb#125
  def role_mapping_to_hash(role_mapping); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/tenant.rb#8
module Descope::Api::V1::Management::Tenant
  include ::Descope::Mixins::Validation
  include ::Descope::Api::V1::Management::Common

  # source://descope//lib/descope/api/v1/management/tenant.rb#13
  def create_tenant(name: T.unsafe(nil), id: T.unsafe(nil), self_provisioning_domains: T.unsafe(nil), custom_attributes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/tenant.rb#32
  def delete_tenant(id = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/tenant.rb#42
  def load_all_tenants; end

  # source://descope//lib/descope/api/v1/management/tenant.rb#37
  def load_tenant(id = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/tenant.rb#47
  def search_all_tenants(ids: T.unsafe(nil), names: T.unsafe(nil), self_provisioning_domains: T.unsafe(nil), custom_attributes: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/tenant.rb#23
  def update_tenant(name: T.unsafe(nil), id: T.unsafe(nil), self_provisioning_domains: T.unsafe(nil), custom_attributes: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/management/tenant.rb#60
  def compose_tenant_create_update_body(name, id, self_provisioning_domains, custom_attributes); end
end

# Management API calls
#
# source://descope//lib/descope/api/v1/management/user.rb#8
module Descope::Api::V1::Management::User
  include ::Descope::Api::V1::Management::Common

  # Updates an existing user's status, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserStatus/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#231
  def activate(login_id); end

  # source://descope//lib/descope/api/v1/management/user.rb#370
  def add_tenant_role(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil), role_names: T.unsafe(nil)); end

  # Batch Create Users, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/CreateUsers/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#21
  def create_batch_users(users = T.unsafe(nil)); end

  # Create a new test user.
  # The login_id is required and will determine what the user will use to sign in.
  # Make sure the login id is unique for test. All other fields are optional.
  # Test User Management:
  # 1. Create test Users
  # 2. Generate OTP (sms/email) for test users
  # 3. Generate Magic Link (sms/email) for test users
  # 4. Generate Enchanted Link (email) for test users
  # 5. Delete Test Users
  #
  # @see https://docs.descope.com/api/testusermanagement/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#43
  def create_test_user(**args); end

  # Create a new user, using a valid management key.
  # Once the user is created, the user can then login utilizing any sign-in api supported. This will then switch the user from invited to active.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/CreateUser/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#14
  def create_user(**args); end

  # source://descope//lib/descope/api/v1/management/user.rb#241
  def deactivate(login_id); end

  # source://descope//lib/descope/api/v1/management/user.rb#119
  def delete_all_test_users; end

  # Delete a user, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/DeleteUser/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#110
  def delete_user(login_id = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#413
  def expire_password(login_id); end

  # source://descope//lib/descope/api/v1/management/user.rb#446
  def generate_embedded_link(login_id: T.unsafe(nil), custom_claims: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#438
  def generate_enchanted_link_for_test_user(login_id: T.unsafe(nil), uri: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#429
  def generate_magic_link_for_test_user(method: T.unsafe(nil), login_id: T.unsafe(nil), uri: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#421
  def generate_otp_for_test_user(method: T.unsafe(nil), login_id: T.unsafe(nil)); end

  # Get an existing user's provider token, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/GetUserProviderToken/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#220
  def get_provider_token(login_id: T.unsafe(nil), provider: T.unsafe(nil)); end

  # Create a new user and invite them via an email message.
  #
  #         Functions exactly the same as the `create` function with the additional invitation
  #             behavior. See the documentation above for the general creation behavior.
  #
  #         IMPORTANT: Since the invitation is sent by email, make sure either
  #             the email is explicitly set, or the login_id itself is an email address.
  #             You must configure the invitation URL in the Descope console prior to
  #             calling the method.
  #
  # source://descope//lib/descope/api/v1/management/user.rb#57
  def invite_user(**args); end

  # Load a user's data, using a valid management key by user id.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/LoadUser/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#140
  def load_by_user_id(user_id); end

  # Load a user's data, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/LoadUser/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#126
  def load_user(login_id); end

  # Log a user out of all sessions, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/LogoutAllUserDevices/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#154
  def logout_user(login_id); end

  # source://descope//lib/descope/api/v1/management/user.rb#163
  def logout_user_by_id(user_id); end

  # Search for users, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/SearchUsers/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#174
  def search_all_users(login_id: T.unsafe(nil), tenant_ids: T.unsafe(nil), role_names: T.unsafe(nil), text: T.unsafe(nil), limit: T.unsafe(nil), page: T.unsafe(nil), sso_only: T.unsafe(nil), test_users_only: T.unsafe(nil), with_test_user: T.unsafe(nil), custom_attributes: T.unsafe(nil), statuses: T.unsafe(nil), emails: T.unsafe(nil), phones: T.unsafe(nil), sso_app_ids: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#396
  def set_active_password(login_id: T.unsafe(nil), password: T.unsafe(nil)); end

  # Deprecated (use set_temporary_password(..) instead)
  #
  # source://descope//lib/descope/api/v1/management/user.rb#405
  def set_password(login_id: T.unsafe(nil), password: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#388
  def set_temporary_password(login_id: T.unsafe(nil), password: T.unsafe(nil)); end

  # Update an existing user's custom attributes, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserCustomAttribute/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#317
  def update_custom_attribute(login_id: T.unsafe(nil), attribute_key: T.unsafe(nil), attribute_value: T.unsafe(nil)); end

  # Updates an existing user's display name, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserDisplayName/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#290
  def update_display_name(login_id: T.unsafe(nil), name: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil)); end

  # Updates an existing user's email, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserEmail/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#265
  def update_email(login_id: T.unsafe(nil), email: T.unsafe(nil), verified: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#327
  def update_jwt(jwt: T.unsafe(nil), custom_claims: T.unsafe(nil)); end

  # Updates an existing user's login ID, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserLoginID/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#253
  def update_login_id(login_id: T.unsafe(nil), new_login_id: T.unsafe(nil)); end

  # Updates an existing user's phone number, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserPhone/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#278
  def update_phone(login_id: T.unsafe(nil), phone: T.unsafe(nil), verified: T.unsafe(nil)); end

  # Update an existing user's profile picture, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUserPicture/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#307
  def update_picture(login_id: T.unsafe(nil), picture: T.unsafe(nil)); end

  # Updates a user's details, using a valid management key.
  #
  # @see https://docs.descope.com/api/openapi/usermanagement/operation/UpdateUser/
  #
  # source://descope//lib/descope/api/v1/management/user.rb#64
  def update_user(login_id: T.unsafe(nil), email: T.unsafe(nil), phone: T.unsafe(nil), name: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil), role_names: T.unsafe(nil), user_tenants: T.unsafe(nil), picture: T.unsafe(nil), custom_attributes: T.unsafe(nil), verified_email: T.unsafe(nil), verified_phone: T.unsafe(nil), additional_identifiers: T.unsafe(nil), password: T.unsafe(nil), hashed_password: T.unsafe(nil), sso_app_ids: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#336
  def user_add_roles(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil), role_names: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#354
  def user_add_tenant(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#345
  def user_remove_roles(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil), role_names: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#362
  def user_remove_tenant(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#379
  def user_remove_tenant_roles(login_id: T.unsafe(nil), tenant_id: T.unsafe(nil), role_names: T.unsafe(nil)); end

  private

  # source://descope//lib/descope/api/v1/management/user.rb#523
  def user_compose_create_body(login_id: T.unsafe(nil), email: T.unsafe(nil), phone: T.unsafe(nil), name: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil), role_names: T.unsafe(nil), user_tenants: T.unsafe(nil), invite: T.unsafe(nil), test: T.unsafe(nil), picture: T.unsafe(nil), custom_attributes: T.unsafe(nil), verified_email: T.unsafe(nil), verified_phone: T.unsafe(nil), invite_url: T.unsafe(nil), send_mail: T.unsafe(nil), send_sms: T.unsafe(nil), additional_identifiers: T.unsafe(nil), password: T.unsafe(nil), hashed_password: T.unsafe(nil), sso_app_ids: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#576
  def user_compose_update_body(login_id: T.unsafe(nil), email: T.unsafe(nil), phone: T.unsafe(nil), name: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil), role_names: T.unsafe(nil), user_tenants: T.unsafe(nil), test: T.unsafe(nil), invite: T.unsafe(nil), picture: T.unsafe(nil), custom_attributes: T.unsafe(nil), verified_email: T.unsafe(nil), verified_phone: T.unsafe(nil), additional_identifiers: T.unsafe(nil), password: T.unsafe(nil), hashed_password: T.unsafe(nil), sso_app_ids: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/management/user.rb#466
  def user_create(login_id: T.unsafe(nil), email: T.unsafe(nil), phone: T.unsafe(nil), verified_email: T.unsafe(nil), verified_phone: T.unsafe(nil), name: T.unsafe(nil), role_names: T.unsafe(nil), user_tenants: T.unsafe(nil), invite: T.unsafe(nil), test: T.unsafe(nil), custom_attributes: T.unsafe(nil), picture: T.unsafe(nil), send_mail: T.unsafe(nil), send_sms: T.unsafe(nil), additional_identifiers: T.unsafe(nil), invite_url: T.unsafe(nil), password: T.unsafe(nil), hashed_password: T.unsafe(nil), given_name: T.unsafe(nil), middle_name: T.unsafe(nil), family_name: T.unsafe(nil), sso_app_ids: T.unsafe(nil), skip_create: T.unsafe(nil)); end
end

# Holds all session methods
#
# source://descope//lib/descope/api/v1/session.rb#7
module Descope::Api::V1::Session
  include ::Descope::Mixins::Common
  include ::Descope::Mixins::Common::EndpointsV1
  include ::Descope::Mixins::Common::EndpointsV2

  # source://descope//lib/descope/api/v1/session.rb#30
  def me(refresh_token = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/session.rb#16
  def refresh_session(refresh_token: T.unsafe(nil), audience: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/session.rb#34
  def sign_out(refresh_token = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/session.rb#38
  def sign_out_all(refresh_token = T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/session.rb#12
  def token_validation_key(project_id); end

  # @raise [Descope::AuthException]
  #
  # source://descope//lib/descope/api/v1/session.rb#65
  def validate_and_refresh_session(session_token: T.unsafe(nil), refresh_token: T.unsafe(nil), audience: T.unsafe(nil)); end

  # source://descope//lib/descope/api/v1/session.rb#42
  def validate_session(session_token: T.unsafe(nil), audience: T.unsafe(nil)); end
end

# exception for unset user_id, this might cause removal of
# all users, or other unexpected behaviour
#
# source://descope//lib/descope/exception.rb#31
class Descope::ArgumentException < ::Descope::Exception; end

# source://descope//lib/descope/exception.rb#25
class Descope::AuthException < ::Descope::Exception; end

# exception for incorrect request, you've sent wrong params
#
# source://descope//lib/descope/exception.rb#46
class Descope::BadRequest < ::Descope::HTTPError; end

# Main class for descope client
#
# source://descope//lib/descope/client.rb#3
class Descope::Client
  include ::Descope::Mixins::Common
  include ::Descope::Mixins::Headers
  include ::Descope::Mixins::HTTP
  include ::Descope::Mixins::Logging
  include ::Descope::Mixins
  include ::Descope::Mixins::Initializer
end

# Default exception in namespace of Descope
# If you want to catch all exceptions, then you should use this one.
# Network exceptions are not included
#
# source://descope//lib/descope/exception.rb#5
class Descope::Exception < ::StandardError
  # @return [Exception] a new instance of Exception
  #
  # source://descope//lib/descope/exception.rb#8
  def initialize(message, error_data = T.unsafe(nil)); end

  # Returns the value of attribute error_data.
  #
  # source://descope//lib/descope/exception.rb#6
  def error_data; end
end

# Parent for all exceptions that arise out of HTTP error responses.
#
# source://descope//lib/descope/exception.rb#15
class Descope::HTTPError < ::Descope::Exception
  # source://descope//lib/descope/exception.rb#16
  def headers; end

  # source://descope//lib/descope/exception.rb#20
  def http_code; end
end

# source://descope//lib/descope/exception.rb#35
class Descope::InvalidParameter < ::Descope::Exception; end

# exception for invalid token when its empty
#
# source://descope//lib/descope/exception.rb#34
class Descope::InvalidToken < ::Descope::Exception; end

# source://descope//lib/descope/exception.rb#40
class Descope::MethodNotAllowed < ::Descope::HTTPError; end

# Collecting dependencies here
#
# source://descope//lib/descope/mixins/headers.rb#2
module Descope::Mixins
  include ::Descope::Mixins::Initializer
  include ::Descope::Mixins::Common
  include ::Descope::Mixins::Headers
  include ::Descope::Mixins::HTTP
  include ::Descope::Mixins::Logging
end

# Common values and methods
#
# source://descope//lib/descope/mixins/common.rb#8
module Descope::Mixins::Common
  # source://descope//lib/descope/mixins/common.rb#41
  def deep_copy(obj); end

  # @raise [ArgumentException]
  #
  # source://descope//lib/descope/mixins/common.rb#29
  def get_method_string(method); end
end

# source://descope//lib/descope/mixins/common.rb#19
Descope::Mixins::Common::COOKIE_DATA_NAME = T.let(T.unsafe(nil), String)

# pragma: no cover
#
# source://descope//lib/descope/mixins/common.rb#9
Descope::Mixins::Common::DEFAULT_BASE_URL = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#11
Descope::Mixins::Common::DEFAULT_JWT_VALIDATION_LEEWAY = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/common.rb#10
Descope::Mixins::Common::DEFAULT_TIMEOUT_SECONDS = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/common.rb#23
module Descope::Mixins::Common::DeliveryMethod; end

# source://descope//lib/descope/mixins/common.rb#26
Descope::Mixins::Common::DeliveryMethod::EMAIL = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/common.rb#25
Descope::Mixins::Common::DeliveryMethod::SMS = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/common.rb#24
Descope::Mixins::Common::DeliveryMethod::WHATSAPP = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/common.rb#45
module Descope::Mixins::Common::EndpointsV1; end

# saml
#
# source://descope//lib/descope/mixins/common.rb#88
Descope::Mixins::Common::EndpointsV1::AUTH_SAML_START_PATH = T.let(T.unsafe(nil), String)

# access key
#
# source://descope//lib/descope/mixins/common.rb#54
Descope::Mixins::Common::EndpointsV1::EXCHANGE_AUTH_ACCESS_KEY_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#78
Descope::Mixins::Common::EndpointsV1::GET_SESSION_ENCHANTEDLINK_AUTH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#69
Descope::Mixins::Common::EndpointsV1::GET_SESSION_MAGICLINK_AUTH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#49
Descope::Mixins::Common::EndpointsV1::LOGOUT_ALL_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#48
Descope::Mixins::Common::EndpointsV1::LOGOUT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#51
Descope::Mixins::Common::EndpointsV1::ME_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#84
Descope::Mixins::Common::EndpointsV1::OAUTH_CREATE_REDIRECT_URL_FOR_SIGN_IN_REQUEST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#85
Descope::Mixins::Common::EndpointsV1::OAUTH_CREATE_REDIRECT_URL_FOR_SIGN_UP_REQUEST_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#83
Descope::Mixins::Common::EndpointsV1::OAUTH_EXCHANGE_TOKEN_PATH = T.let(T.unsafe(nil), String)

# oauth
#
# source://descope//lib/descope/mixins/common.rb#82
Descope::Mixins::Common::EndpointsV1::OAUTH_START_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#111
Descope::Mixins::Common::EndpointsV1::PASSWORD_POLICY_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#46
Descope::Mixins::Common::EndpointsV1::REFRESH_TOKEN_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#110
Descope::Mixins::Common::EndpointsV1::REPLACE_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#89
Descope::Mixins::Common::EndpointsV1::SAML_EXCHANGE_TOKEN_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#47
Descope::Mixins::Common::EndpointsV1::SELECT_TENANT_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#108
Descope::Mixins::Common::EndpointsV1::SEND_RESET_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#75
Descope::Mixins::Common::EndpointsV1::SIGN_IN_AUTH_ENCHANTEDLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#66
Descope::Mixins::Common::EndpointsV1::SIGN_IN_AUTH_MAGICLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#58
Descope::Mixins::Common::EndpointsV1::SIGN_IN_AUTH_OTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#100
Descope::Mixins::Common::EndpointsV1::SIGN_IN_AUTH_WEBAUTHN_FINISH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#99
Descope::Mixins::Common::EndpointsV1::SIGN_IN_AUTH_WEBAUTHN_START_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#107
Descope::Mixins::Common::EndpointsV1::SIGN_IN_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# enchantedlink
#
# source://descope//lib/descope/mixins/common.rb#74
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_ENCHANTEDLINK_PATH = T.let(T.unsafe(nil), String)

# magiclink
#
# source://descope//lib/descope/mixins/common.rb#65
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_MAGICLINK_PATH = T.let(T.unsafe(nil), String)

# otp
#
# source://descope//lib/descope/mixins/common.rb#57
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_OTP_PATH = T.let(T.unsafe(nil), String)

# totp
#
# source://descope//lib/descope/mixins/common.rb#92
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_TOTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#98
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_WEBAUTHN_FINISH_PATH = T.let(T.unsafe(nil), String)

# webauthn
#
# source://descope//lib/descope/mixins/common.rb#97
Descope::Mixins::Common::EndpointsV1::SIGN_UP_AUTH_WEBAUTHN_START_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#76
Descope::Mixins::Common::EndpointsV1::SIGN_UP_OR_IN_AUTH_ENCHANTEDLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#67
Descope::Mixins::Common::EndpointsV1::SIGN_UP_OR_IN_AUTH_MAGICLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#59
Descope::Mixins::Common::EndpointsV1::SIGN_UP_OR_IN_AUTH_OTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#101
Descope::Mixins::Common::EndpointsV1::SIGN_UP_OR_IN_AUTH_WEBAUTHN_START_PATH = T.let(T.unsafe(nil), String)

# password
#
# source://descope//lib/descope/mixins/common.rb#106
Descope::Mixins::Common::EndpointsV1::SIGN_UP_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#103
Descope::Mixins::Common::EndpointsV1::UPDATE_AUTH_WEBAUTHN_FINISH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#102
Descope::Mixins::Common::EndpointsV1::UPDATE_AUTH_WEBAUTHN_START_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#109
Descope::Mixins::Common::EndpointsV1::UPDATE_PASSWORD_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#94
Descope::Mixins::Common::EndpointsV1::UPDATE_TOTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#79
Descope::Mixins::Common::EndpointsV1::UPDATE_USER_EMAIL_ENCHANTEDLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#70
Descope::Mixins::Common::EndpointsV1::UPDATE_USER_EMAIL_MAGICLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#61
Descope::Mixins::Common::EndpointsV1::UPDATE_USER_EMAIL_OTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#71
Descope::Mixins::Common::EndpointsV1::UPDATE_USER_PHONE_MAGICLINK_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#62
Descope::Mixins::Common::EndpointsV1::UPDATE_USER_PHONE_OTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#50
Descope::Mixins::Common::EndpointsV1::VALIDATE_SESSION_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#60
Descope::Mixins::Common::EndpointsV1::VERIFY_CODE_AUTH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#77
Descope::Mixins::Common::EndpointsV1::VERIFY_ENCHANTEDLINK_AUTH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#68
Descope::Mixins::Common::EndpointsV1::VERIFY_MAGICLINK_AUTH_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#93
Descope::Mixins::Common::EndpointsV1::VERIFY_TOTP_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#114
module Descope::Mixins::Common::EndpointsV2; end

# source://descope//lib/descope/mixins/common.rb#115
Descope::Mixins::Common::EndpointsV2::PUBLIC_KEY_PATH = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#12
Descope::Mixins::Common::PHONE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://descope//lib/descope/mixins/common.rb#21
Descope::Mixins::Common::REDIRECT_LOCATION_COOKIE_NAME = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#15
Descope::Mixins::Common::REFRESH_SESSION_COOKIE_NAME = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#18
Descope::Mixins::Common::REFRESH_SESSION_TOKEN_NAME = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#14
Descope::Mixins::Common::SESSION_COOKIE_NAME = T.let(T.unsafe(nil), String)

# source://descope//lib/descope/mixins/common.rb#17
Descope::Mixins::Common::SESSION_TOKEN_NAME = T.let(T.unsafe(nil), String)

# HTTP-related methods
#
# source://descope//lib/descope/mixins/http.rb#9
module Descope::Mixins::HTTP
  # @raise [ArgumentError]
  #
  # source://descope//lib/descope/mixins/http.rb#64
  def add_headers(h = T.unsafe(nil)); end

  # Returns the value of attribute base_uri.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def base_uri; end

  # Sets the attribute base_uri
  #
  # @param value the value to set the attribute base_uri to.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def base_uri=(_arg0); end

  # source://descope//lib/descope/mixins/http.rb#114
  def call(method, url, timeout, headers, body = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def delete(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def delete_with_body(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#54
  def encode_uri(uri); end

  # source://descope//lib/descope/mixins/http.rb#20
  def get(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # Returns the value of attribute headers.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def headers; end

  # Sets the attribute headers
  #
  # @param value the value to set the attribute headers to.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def headers=(_arg0); end

  # source://descope//lib/descope/mixins/http.rb#20
  def patch(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def post(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def post_file(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def post_form(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#20
  def put(uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # @raise [Descope::Unsupported]
  #
  # source://descope//lib/descope/mixins/http.rb#77
  def request(method, uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil)); end

  # source://descope//lib/descope/mixins/http.rb#71
  def request_with_retry(method, uri, body = T.unsafe(nil), extra_headers = T.unsafe(nil), pswd = T.unsafe(nil)); end

  # Returns the value of attribute retry_count.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def retry_count; end

  # Sets the attribute retry_count
  #
  # @param value the value to set the attribute retry_count to.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def retry_count=(_arg0); end

  # source://descope//lib/descope/mixins/http.rb#29
  def retry_options; end

  # source://descope//lib/descope/mixins/http.rb#47
  def safe_parse_json(body); end

  # Returns the value of attribute timeout.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def timeout; end

  # Sets the attribute timeout
  #
  # @param value the value to set the attribute timeout to.
  #
  # source://descope//lib/descope/mixins/http.rb#10
  def timeout=(_arg0); end

  # source://descope//lib/descope/mixins/http.rb#60
  def url(path); end
end

# source://descope//lib/descope/mixins/http.rb#17
Descope::Mixins::HTTP::BASE_DELAY = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/http.rb#12
Descope::Mixins::HTTP::DEFAULT_RETRIES = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/http.rb#13
Descope::Mixins::HTTP::MAX_ALLOWED_RETRIES = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/http.rb#15
Descope::Mixins::HTTP::MAX_REQUEST_RETRY_DELAY = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/http.rb#14
Descope::Mixins::HTTP::MAX_REQUEST_RETRY_JITTER = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/http.rb#16
Descope::Mixins::HTTP::MIN_REQUEST_RETRY_DELAY = T.let(T.unsafe(nil), Integer)

# source://descope//lib/descope/mixins/headers.rb#3
module Descope::Mixins::Headers
  # Descope default headers
  #
  # source://descope//lib/descope/mixins/headers.rb#5
  def client_headers; end
end

# Helper class for initializing the Descope API
#
# source://descope//lib/descope/mixins/initializer.rb#8
module Descope::Mixins::Initializer
  # source://descope//lib/descope/mixins/initializer.rb#11
  def initialize(config); end

  # source://descope//lib/descope/mixins/initializer.rb#60
  def authorization_header(pswd = T.unsafe(nil)); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/initializer.rb#52
  def base_url(options); end

  # source://descope//lib/descope/mixins/initializer.rb#66
  def initialize_api(options); end

  # source://descope//lib/descope/mixins/initializer.rb#72
  def initialize_v1(_options); end

  # Returns the value of attribute mlock.
  #
  # source://descope//lib/descope/mixins/initializer.rb#9
  def mlock; end

  # Sets the attribute mlock
  #
  # @param value the value to set the attribute mlock to.
  #
  # source://descope//lib/descope/mixins/initializer.rb#9
  def mlock=(_arg0); end

  # Returns the value of attribute public_keys.
  #
  # source://descope//lib/descope/mixins/initializer.rb#9
  def public_keys; end

  # Sets the attribute public_keys
  #
  # @param value the value to set the attribute public_keys to.
  #
  # source://descope//lib/descope/mixins/initializer.rb#9
  def public_keys=(_arg0); end

  class << self
    # @private
    #
    # source://descope//lib/descope/mixins/initializer.rb#48
    def included(klass); end
  end
end

# Module to provide logger.
#
# source://descope//lib/descope/mixins/logging.rb#6
module Descope::Mixins::Logging
  # source://descope//lib/descope/mixins/logging.rb#8
  def logger; end

  class << self
    # source://descope//lib/descope/mixins/logging.rb#21
    def configure_logger_for(classname, level = T.unsafe(nil)); end

    # source://descope//lib/descope/mixins/logging.rb#17
    def logger_for(classname, level); end
  end
end

# Module to provide validation for specific data structures.
#
# source://descope//lib/descope/mixins/validation.rb#6
module Descope::Mixins::Validation
  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#70
  def validate_code(code); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#34
  def validate_email(email); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#22
  def validate_login_id(login_id); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#30
  def validate_password(password); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#48
  def validate_phone(method, phone); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#66
  def validate_redirect_url(return_url); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#42
  def validate_refresh_token_not_nil(refresh_token); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#74
  def validate_scim_group_id(group_id); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#62
  def validate_tenant(tenant); end

  # @raise [ArgumentError]
  #
  # source://descope//lib/descope/mixins/validation.rb#7
  def validate_tenants(key_tenants); end

  # @raise [AuthException]
  #
  # source://descope//lib/descope/mixins/validation.rb#38
  def validate_token_not_empty(token); end

  # @raise [Descope::ArgumentException]
  #
  # source://descope//lib/descope/mixins/validation.rb#26
  def validate_user_id(user_id); end

  # source://descope//lib/descope/mixins/validation.rb#56
  def verify_provider(oauth_provider); end
end

# exception for not found resource, you query for an
# non-existent resource, or wrong path
#
# source://descope//lib/descope/exception.rb#39
class Descope::NotFound < ::Descope::HTTPError; end

# source://descope//lib/descope/exception.rb#48
class Descope::RateLimitException < ::Descope::HTTPError; end

# source://descope//lib/descope/exception.rb#49
class Descope::RequestTimeout < ::Descope::HTTPError; end

# source://descope//lib/descope/version.rb#6
Descope::SDK_VERSION = T.let(T.unsafe(nil), String)

# exception for server error
#
# source://descope//lib/descope/exception.rb#44
class Descope::ServerError < ::Descope::HTTPError; end

# source://descope//lib/descope/exception.rb#36
class Descope::Unauthorized < ::Descope::HTTPError; end

# exception for unknown error
#
# source://descope//lib/descope/exception.rb#42
class Descope::Unsupported < ::Descope::HTTPError; end

# source://descope//lib/descope/version.rb#5
Descope::VERSION = T.let(T.unsafe(nil), String)

# This class is made for backward compatibility of gem
#
# source://descope//lib/descope_client.rb#3
class DescopeClient < ::Descope::Client; end
