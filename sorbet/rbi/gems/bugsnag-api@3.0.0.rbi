# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bugsnag-api` gem.
# Please instead update this file by running `bin/tapioca gem bugsnag-api`.


# source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#1
module Bugsnag; end

# Static access to a Bugsnag API Client
#
# source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#2
module Bugsnag::Api
  class << self
    # Get the static API client. Note that using the static API
    # client may not work as expected in a multithreaded environment
    # (e.g. when using the {#paginate} or {#last_response} instance
    # methods)
    #
    # @return [Bugsnag::Api::Client] API client
    #
    # source://bugsnag-api//lib/bugsnag/api.rb#29
    def client; end

    # Get the static client's configuration options
    #
    # @return [Bugsnag::Api::Configuration] configuration wrapper
    #
    # source://bugsnag-api//lib/bugsnag/api.rb#19
    def configuration; end

    # Set configuration options using a block
    #
    # source://bugsnag-api//lib/bugsnag/api.rb#12
    def configure(&block); end

    # Reset the static API client
    #
    # @return [Bugsnag::Api::Client] API client
    #
    # source://bugsnag-api//lib/bugsnag/api.rb#36
    def reset!; end

    private

    # source://bugsnag-api//lib/bugsnag/api.rb#42
    def method_missing(method_name, *args, &block); end
  end
end

# Raised when a method requires account-level credentials
# but none were provided
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#129
class Bugsnag::Api::AccountCredentialsRequired < ::StandardError; end

# Raised when Bugsnag returns a 502 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#119
class Bugsnag::Api::BadGateway < ::Bugsnag::Api::ServerError; end

# Raised when Bugsnag returns a 400 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#80
class Bugsnag::Api::BadRequest < ::Bugsnag::Api::ClientError; end

# Client for the Bugsnag API
#
# @see http://docs.bugsnagapiv2.apiary.io/
#
# source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#3
class Bugsnag::Api::Client
  include ::Bugsnag::Api::Client::Organizations
  include ::Bugsnag::Api::Client::Collaborators
  include ::Bugsnag::Api::Client::Projects
  include ::Bugsnag::Api::Client::EventFields
  include ::Bugsnag::Api::Client::CurrentUser
  include ::Bugsnag::Api::Client::Errors
  include ::Bugsnag::Api::Client::Events
  include ::Bugsnag::Api::Client::Pivots
  include ::Bugsnag::Api::Client::Trends
  include ::Bugsnag::Api::Client::Comments
  include ::Bugsnag::Api::Client::Stability
  include ::Bugsnag::Api::Client::Releases

  # @return [Client] a new instance of Client
  # @yield [configuration]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#41
  def initialize(options = T.unsafe(nil), &block); end

  # Indicates if the client was supplied Basic Auth
  # username and password
  #
  # @return [Boolean]
  # @see https://bugsnag.com/docs/api#user-authentication
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#140
  def basic_authenticated?; end

  # Get client's configuration options
  #
  # @return [Bugsnag::Api::Configuration] configuration wrapper
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#55
  def configuration; end

  # Set configuration options using a block
  #
  # @yield [configuration]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#47
  def configure; end

  # Merges hashes together cleanly, favouring RHS values
  #
  # @return [Hash]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#155
  def deep_merge(l_hash, r_hash); end

  # Make a HTTP DELETE request
  #
  # @param url [String] The path, relative to {#endpoint}
  # @param options [Hash] Query and header params for request
  # @return [Sawyer::Resource]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#91
  def delete(url, options = T.unsafe(nil)); end

  # Make a HTTP GET request
  #
  # @param url [String] The path, relative to {#endpoint}
  # @param options [Hash] Query and header params for request
  # @return [Sawyer::Resource]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#64
  def get(url, options = T.unsafe(nil)); end

  # Response for last HTTP request
  #
  # @return [Sawyer::Response]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#131
  def last_response; end

  # Make one or more HTTP GET requests, optionally fetching
  # the next page of results from URL in Link response header based
  # on value in {#auto_paginate}.
  #
  # @param url [String] The path, relative to {#endpoint}
  # @param options [Hash] Query and header params for request
  # @param block [Block] Block to perform the data concatination of the
  #   multiple requests. The block is called with two parameters, the first
  #   contains the contents of the requests so far and the second parameter
  #   contains the latest response.
  # @return [Sawyer::Resource]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#106
  def paginate(url, options = T.unsafe(nil), &block); end

  # Make a HTTP PATCH request
  #
  # @param url [String] The path, relative to {#endpoint}
  # @param options [Hash] Body and header params for request
  # @return [Sawyer::Resource]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#82
  def patch(url, options = T.unsafe(nil)); end

  # Make a HTTP POST request
  #
  # @param url [String] The path, relative to {#endpoint}
  # @param options [Hash] Body and header params for request
  # @return [Sawyer::Resource]
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#73
  def post(url, options = T.unsafe(nil)); end

  # Indicates if the client was supplied an auth token
  #
  # @return [Boolean]
  # @see https://bugsnag.com/docs/api#account-authentication
  #
  # source://bugsnag-api//lib/bugsnag/api/client.rb#148
  def token_authenticated?; end

  private

  # source://bugsnag-api//lib/bugsnag/api/client.rb#166
  def agent; end

  # source://bugsnag-api//lib/bugsnag/api/client.rb#200
  def boolean_from_response(method, path, options = T.unsafe(nil)); end

  # source://bugsnag-api//lib/bugsnag/api/client.rb#219
  def parse_query_and_convenience_headers(options); end

  # source://bugsnag-api//lib/bugsnag/api/client.rb#187
  def request(method, path, data, options = T.unsafe(nil)); end

  # source://bugsnag-api//lib/bugsnag/api/client.rb#183
  def reset_agent; end

  # source://bugsnag-api//lib/bugsnag/api/client.rb#207
  def sawyer_options; end
end

# Header keys that can be passed in options hash to {#get},{#head}
#
# source://bugsnag-api//lib/bugsnag/api/client.rb#39
Bugsnag::Api::Client::CONVENIENCE_HEADERS = T.let(T.unsafe(nil), Set)

# Methods for the Organizations Collaborators API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators
#
# source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#8
module Bugsnag::Api::Client::Collaborators
  # View a Collaborator
  #
  # @return [Sawyer::Resource] Collaborator
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/view-a-collaborator
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#13
  def collaborator(org_id, collaborator_id, options = T.unsafe(nil)); end

  # List Collaborators
  #
  # @option per_page
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Collaborators
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/list-collaborators
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/list-collaborators-on-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#26
  def collaborators(org_id = T.unsafe(nil), project_id = T.unsafe(nil), options = T.unsafe(nil)); end

  # Delete a Collaborator
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/delete-a-collaborator
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#69
  def delete_collaborator(org_id, id, options = T.unsafe(nil)); end

  # Invite Collaborators
  #
  # @option project_ids
  # @option admin
  # @param project_ids [Hash] a customizable set of options
  # @param admin [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] Collaborator details
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/bulk-invite-collaborators
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#44
  def invite_collaborators(org_id, emails, options = T.unsafe(nil)); end

  # Update a Collaborator's permissions
  #
  # @option project_ids
  # @option admin
  # @param project_ids [Hash] a customizable set of options
  # @param admin [Hash] a customizable set of options
  # @return [Sawyer::Resource] Collaborator details
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/update-a-collaborator's-permissions
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#61
  def update_collaborator_permissions(org_id, id, options = T.unsafe(nil)); end

  # View Projects a Collaborator has access to
  #
  # @option direction
  # @option sort
  # @option per_page
  # @param direction [Hash] a customizable set of options
  # @param sort [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] A list of projects the collaborator belongs to
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/collaborators/view-projects-a-collaborator-has-access-to
  #
  # source://bugsnag-api//lib/bugsnag/api/client/collaborators.rb#80
  def view_collaborator_projects(org_id, id, options = T.unsafe(nil)); end
end

# Methods for the Errors API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/comments
#
# source://bugsnag-api//lib/bugsnag/api/client/comments.rb#8
module Bugsnag::Api::Client::Comments
  # View an Comment
  #
  # @return [Sawyer::Resource] Requested Comment
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/comments/view-a-comment
  #
  # source://bugsnag-api//lib/bugsnag/api/client/comments.rb#25
  def comment(id, options = T.unsafe(nil)); end

  # List Comments on an Error
  #
  # @option sort
  # @option offset
  # @option direction
  # @option per_page
  # @param sort [Hash] a customizable set of options
  # @param offset [Hash] a customizable set of options
  # @param direction [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Error Comments
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/comments/list-comments-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/comments.rb#17
  def comments(project_id, error_id, options = T.unsafe(nil)); end

  # Create a Comment on an Error
  #
  # @return [Sawyer::Resource] The new Comment
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/comments/create-a-comment-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/comments.rb#33
  def create_comment(project_id, error_id, message, options = T.unsafe(nil)); end

  # Delete a Comment
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/comments/delete-a-comment
  #
  # source://bugsnag-api//lib/bugsnag/api/client/comments.rb#49
  def delete_comment(id, options = T.unsafe(nil)); end

  # Update a Comment
  #
  # @return [Sawyer::Resource] The updated Comment
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/comments/update-a-comment
  #
  # source://bugsnag-api//lib/bugsnag/api/client/comments.rb#41
  def update_comment(id, message, options = T.unsafe(nil)); end
end

# Methods for theCurrent User API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/current-user
#
# source://bugsnag-api//lib/bugsnag/api/client/currentuser.rb#8
module Bugsnag::Api::Client::CurrentUser
  # List the Current User's Organizations
  #
  # @option admin
  # @option per_page
  # @param admin [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Organizations
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/current-user/organizations/list-the-current-user's-organizations
  #
  # source://bugsnag-api//lib/bugsnag/api/client/currentuser.rb#15
  def organizations(options = T.unsafe(nil)); end

  # List the Current User's Projects
  #
  # @option direction
  # @option sort
  # @option per_page
  # @param direction [Hash] a customizable set of options
  # @param sort [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Projects
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/current-user/organizations/list-the-current-user's-projects
  #
  # source://bugsnag-api//lib/bugsnag/api/client/currentuser.rb#26
  def projects(org_id, options = T.unsafe(nil)); end
end

# Methods for the Errors API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/errors
#
# source://bugsnag-api//lib/bugsnag/api/client/errors.rb#8
module Bugsnag::Api::Client::Errors
  # Delete an Error
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/errors/delete-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/errors.rb#60
  def delete_errors(project_id, error_id = T.unsafe(nil), options = T.unsafe(nil)); end

  # List the Errors on a Project
  #
  # @option sort
  # @option base
  # @option direction
  # @option filters
  # @param sort [Hash] a customizable set of options
  # @param base [Hash] a customizable set of options
  # @param direction [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Project Errors
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/errors/list-the-errors-on-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/errors.rb#19
  def error(project_id, id = T.unsafe(nil), options = T.unsafe(nil)); end

  # List the Errors on a Project
  #
  # @option sort
  # @option base
  # @option direction
  # @option filters
  # @param sort [Hash] a customizable set of options
  # @param base [Hash] a customizable set of options
  # @param direction [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Project Errors
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/errors/list-the-errors-on-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/errors.rb#19
  def errors(project_id, id = T.unsafe(nil), options = T.unsafe(nil)); end

  # Update an Error
  #
  # @option assigned_collaborator_id
  # @option severity
  # @option issue_url
  # @option issue_title
  # @option reopen_rules
  # @param assigned_collaborator_id [Hash] a customizable set of options
  # @param severity [Hash] a customizable set of options
  # @param issue_url [Hash] a customizable set of options
  # @param issue_title [Hash] a customizable set of options
  # @param reopen_rules [Hash] a customizable set of options
  # @return [Sawyer::Resource] Updated Error
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/errors/update-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/errors.rb#40
  def update_errors(project_id, ids, operation, options = T.unsafe(nil)); end
end

# Methods for the Project Event Fields API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/event-fields
#
# source://bugsnag-api//lib/bugsnag/api/client/eventfields.rb#8
module Bugsnag::Api::Client::EventFields
  # Create a custom Event Field
  #
  # @option reindex
  # @option pivot_options
  # @param reindex [Hash] a customizable set of options
  # @param pivot_options [Hash] a customizable set of options
  # @return [Sawyer::Resource] New Event Field
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/event-fields/create-a-custom-event-field
  #
  # source://bugsnag-api//lib/bugsnag/api/client/eventfields.rb#24
  def create_event_field(project_id, display_id, path, filter_options, options = T.unsafe(nil)); end

  # Delete a custom Event Field
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/event-fields/delete-a-custom-event-field
  #
  # source://bugsnag-api//lib/bugsnag/api/client/eventfields.rb#43
  def delete_event_field(project_id, display_id, options = T.unsafe(nil)); end

  # List the Event Fields for a Project
  #
  # @option per_page
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of event fields
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/event-fields/list-the-event-fields-for-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/eventfields.rb#14
  def event_fields(project_id, options = T.unsafe(nil)); end

  # Update a custom Event Field
  #
  # @option filter_options
  # @option reindex
  # @option pivot_options
  # @param filter_options [Hash] a customizable set of options
  # @param reindex [Hash] a customizable set of options
  # @param pivot_options [Hash] a customizable set of options
  # @return [Sawyer::Resource] Updated Event Field
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/event-fields/update-a-custom-event-field
  #
  # source://bugsnag-api//lib/bugsnag/api/client/eventfields.rb#35
  def update_event_field(project_id, display_id, path, options = T.unsafe(nil)); end
end

# Methods for the Events API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events
#
# source://bugsnag-api//lib/bugsnag/api/client/events.rb#8
module Bugsnag::Api::Client::Events
  # Delete an Event
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events/delete-an-event
  #
  # source://bugsnag-api//lib/bugsnag/api/client/events.rb#21
  def delete_event(project_id, id, options = T.unsafe(nil)); end

  # List the Events on an Error
  #
  # @option sort
  # @option base
  # @option direction
  # @option filters
  # @param sort [Hash] a customizable set of options
  # @param base [Hash] a customizable set of options
  # @param direction [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Events for the specified Error
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events/list-the-events-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/events.rb#33
  def error_events(project_id, error_id, options = T.unsafe(nil)); end

  # View an Event
  #
  # @return [Sawyer::Resource] Requested Event
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events/view-an-event
  #
  # source://bugsnag-api//lib/bugsnag/api/client/events.rb#13
  def event(project_id, id, options = T.unsafe(nil)); end

  # List the Events on a Project
  #
  # @option sort
  # @option base
  # @option direction
  # @option filters
  # @param sort [Hash] a customizable set of options
  # @param base [Hash] a customizable set of options
  # @param direction [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Events for the specified Project
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events/list-the-events-on-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/events.rb#53
  def events(project_id, options = T.unsafe(nil)); end

  # View the latest Event on an Error
  #
  # @return [Sawyer::Resource] Last event reported Event
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/events/view-the-latest-event-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/events.rb#41
  def latest_event(error_id, options = T.unsafe(nil)); end
end

# Methods for the Organizations API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations
#
# source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#8
module Bugsnag::Api::Client::Organizations
  # Create an Organization
  #
  # @return [Sawyer::Resource] New Organization
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/organizations/create-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#13
  def create_organization(name, options = T.unsafe(nil)); end

  # Delete an Organization
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/organizations/delete-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#39
  def delete_organization(id, options = T.unsafe(nil)); end

  # View an Organization
  #
  # @return [Sawyer::Resource] Requested Organization
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/organizations/view-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#21
  def organization(id, options = T.unsafe(nil)); end

  # Update an Organization
  #
  # @option invoice_address
  # @option billing_emails
  # @param invoice_address [Hash] a customizable set of options
  # @param billing_emails [Hash] a customizable set of options
  # @return [Sawyer::Resource] Updated Organization
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/organizations/update-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/organizations.rb#31
  def update_organization(id, name, auto_upgrade, options = T.unsafe(nil)); end
end

# Methods for the Pivots API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/pivots
#
# source://bugsnag-api//lib/bugsnag/api/client/pivots.rb#8
module Bugsnag::Api::Client::Pivots
  # List values of a Pivot on an Error
  #
  # @option sort
  # @option filters
  # @option base
  # @param sort [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @param base [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of values for the Pivots requested
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/pivots/list-values-of-a-pivot-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/pivots.rb#32
  def pivot_values(project_id, ef_display_id, error_id = T.unsafe(nil), options = T.unsafe(nil)); end

  # List Pivots on an Error
  #
  # @option summary_size
  # @option filters
  # @option pivots
  # @option per_page
  # @param summary_size [Hash] a customizable set of options
  # @param filters [Hash] a customizable set of options
  # @param pivots [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Pivots for the Error specified
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/pivots/list-pivots-on-an-error
  #
  # source://bugsnag-api//lib/bugsnag/api/client/pivots.rb#17
  def pivots(project_id, error_id = T.unsafe(nil), options = T.unsafe(nil)); end
end

# Methods for the Projects API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/projects
#
# source://bugsnag-api//lib/bugsnag/api/client/projects.rb#8
module Bugsnag::Api::Client::Projects
  # Create a Project in an Organization
  #
  # @return [Sawyer::Resource] New Project
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/projects/create-a-project-in-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/projects.rb#13
  def create_project(org_id, name, type, options = T.unsafe(nil)); end

  # Delete a Project
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/organizations/organizations/delete-an-organization
  #
  # source://bugsnag-api//lib/bugsnag/api/client/projects.rb#55
  def delete_project(id, options = T.unsafe(nil)); end

  # View a Project
  #
  # @return [Sawyer::Resource] Requested Project
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/projects/view-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/projects.rb#21
  def project(id, options = T.unsafe(nil)); end

  # Regenerate a Project's notifier API key
  #
  # @return
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/projects/regenerate-a-project's-notifier-api-key
  #
  # source://bugsnag-api//lib/bugsnag/api/client/projects.rb#47
  def regenerate_api_key(id, options = T.unsafe(nil)); end

  # Update a Project
  #
  # @option collaborator_ids
  # @option name
  # @option location_grouping
  # @option discarded_app_versions
  # @option discarded_errors
  # @option url_whitelist
  # @option ignore_old_browsers
  # @option ignored_browser_versions
  # @option resolve_on_deploy
  # @option global_grouping
  # @param global_grouping [Hash] a customizable set of options
  # @param name [Hash] a customizable set of options
  # @param location_grouping [Hash] a customizable set of options
  # @param discarded_app_versions [Hash] a customizable set of options
  # @param discarded_errors [Hash] a customizable set of options
  # @param url_whitelist [Hash] a customizable set of options
  # @param ignore_old_browsers [Hash] a customizable set of options
  # @param ignored_browser_versions [Hash] a customizable set of options
  # @param resolve_on_deploy [Hash] a customizable set of options
  # @param collaborator_ids [Hash] a customizable set of options
  # @return [Sawyer::Resource] Updated Project
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/projects/projects/update-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/projects.rb#39
  def update_project(id, options = T.unsafe(nil)); end
end

# Methods for the Releases API
#
# source://bugsnag-api//lib/bugsnag/api/client/releases.rb#5
module Bugsnag::Api::Client::Releases
  # View a single Release
  #
  # @see https://bugsnagapiv2.docs.apiary.io/#reference/projects/releases/view-a-release
  #
  # source://bugsnag-api//lib/bugsnag/api/client/releases.rb#22
  def release(project_id, release_id, options = T.unsafe(nil)); end

  # List the Releases in a Project
  #
  # @option base
  # @option release_stage
  # @option sort
  # @option offset
  # @option per_page
  # @param base [Hash] a customizable set of options
  # @param release_stage [Hash] a customizable set of options
  # @param sort [Hash] a customizable set of options
  # @param offset [Hash] a customizable set of options
  # @param per_page [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Events for the specified Error
  # @see https://bugsnagapiv2.docs.apiary.io/#reference/projects/releases/list-releases-on-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/releases.rb#15
  def releases(project_id, options = T.unsafe(nil)); end

  # List the Releases in a Release Group
  #
  # @option per_page
  # @option page_token
  # @param per_page [Hash] a customizable set of options
  # @param page_token [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Releases for the specified Release Group
  # @see https://bugsnagapiv2.docs.apiary.io/#reference/projects/releases/list-releases-on-a-release-group
  #
  # source://bugsnag-api//lib/bugsnag/api/client/releases.rb#32
  def releases_in_group(release_group_id, options = T.unsafe(nil)); end
end

# Methods for the Stability API
#
# source://bugsnag-api//lib/bugsnag/api/client/stability.rb#5
module Bugsnag::Api::Client::Stability
  # View the stability trend for a project
  #
  # @return [Sawyer::Resource] Stability trend
  # @see https://bugsnagapiv2.docs.apiary.io/#reference/projects/stability-trend/view-the-stability-trend-for-a-project
  #
  # source://bugsnag-api//lib/bugsnag/api/client/stability.rb#10
  def stability_trend(id, options = T.unsafe(nil)); end
end

# Methods for the Pivots API
#
# @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/trends
#
# source://bugsnag-api//lib/bugsnag/api/client/trends.rb#8
module Bugsnag::Api::Client::Trends
  # List Trends for an Error in bucket form
  #
  # @option filters
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Trends as requested
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/trends/list-the-trends-for-an-error-(buckets)
  #
  # source://bugsnag-api//lib/bugsnag/api/client/trends.rb#14
  def trends_buckets(project_id, buckets_count, error_id = T.unsafe(nil), options = T.unsafe(nil)); end

  # List Trends for an Error in resolution form
  #
  # @option filters
  # @param filters [Hash] a customizable set of options
  # @return [Array<Sawyer::Resource>] List of Trends as requested
  # @see http://docs.bugsnagapiv2.apiary.io/#reference/errors/trends/list-the-trends-for-an-error-(buckets)
  #
  # source://bugsnag-api//lib/bugsnag/api/client/trends.rb#29
  def trends_resolution(project_id, resolution, error_id = T.unsafe(nil), options = T.unsafe(nil)); end
end

# Raised on errors in the 400-499 range
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#77
class Bugsnag::Api::ClientError < ::Bugsnag::Api::Error; end

# Configuration storage and defaults for {Client}
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#8
class Bugsnag::Api::Configuration
  # Set up configuration defaults
  #
  # @return [Configuration] a new instance of Configuration
  #
  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#32
  def initialize(options = T.unsafe(nil)); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def auth_token; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def auth_token=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def auto_paginate; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def auto_paginate=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def connection_options; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def connection_options=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def email; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def email=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def endpoint; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def endpoint=(_arg0); end

  # Load configuration from hash
  #
  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#47
  def load(options = T.unsafe(nil)); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def middleware; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def middleware=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def password; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def password=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def per_page; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def per_page=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def proxy; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def proxy=(_arg0); end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def user_agent; end

  # source://bugsnag-api//lib/bugsnag/api/configuration.rb#29
  def user_agent=(_arg0); end
end

# Default API endpoint
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#10
Bugsnag::Api::Configuration::DEFAULT_ENDPOINT = T.let(T.unsafe(nil), String)

# Default Faraday middleware stack
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#19
Bugsnag::Api::Configuration::DEFAULT_MIDDLEWARE = T.let(T.unsafe(nil), Faraday::RackBuilder)

# Default User Agent header string
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#13
Bugsnag::Api::Configuration::DEFAULT_USER_AGENT = T.let(T.unsafe(nil), String)

# Configuration options
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#25
Bugsnag::Api::Configuration::KEYS = T.let(T.unsafe(nil), Array)

# In Faraday 0.9, Faraday::Builder was renamed to Faraday::RackBuilder
#
# source://bugsnag-api//lib/bugsnag/api/configuration.rb#16
Bugsnag::Api::Configuration::RACK_BUILDER_CLASS = Faraday::RackBuilder

# Raised when Bugsnag returns a 409 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#98
class Bugsnag::Api::Conflict < ::Bugsnag::Api::ClientError; end

# Custom error class for rescuing from all Bugsnag API errors
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#4
class Bugsnag::Api::Error < ::StandardError
  # @return [Error] a new instance of Error
  #
  # source://bugsnag-api//lib/bugsnag/api/error.rb#38
  def initialize(response = T.unsafe(nil)); end

  private

  # source://bugsnag-api//lib/bugsnag/api/error.rb#65
  def build_error_message; end

  # source://bugsnag-api//lib/bugsnag/api/error.rb#45
  def data; end

  # source://bugsnag-api//lib/bugsnag/api/error.rb#61
  def response_error; end

  class << self
    # Returns the appropriate Bugsnag::Api::Error subclass based
    # on status and response message
    #
    # @param response [Hash] HTTP response
    # @return [Octokit::Error]
    #
    # source://bugsnag-api//lib/bugsnag/api/error.rb#11
    def from_response(response); end
  end
end

# Raised when Bugsnag returns a 403 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#86
class Bugsnag::Api::Forbidden < ::Bugsnag::Api::ClientError; end

# Raised when Bugsnag returns a 500 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#113
class Bugsnag::Api::InternalServerError < ::Bugsnag::Api::ServerError; end

# Raised when Bugsnag returns a 405 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#92
class Bugsnag::Api::MethodNotAllowed < ::Bugsnag::Api::ClientError; end

# Raised when client fails to provide valid Content-Type
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#125
class Bugsnag::Api::MissingContentType < ::ArgumentError; end

# Raised when Bugsnag returns a 406 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#95
class Bugsnag::Api::NotAcceptable < ::Bugsnag::Api::ClientError; end

# Raised when Bugsnag returns a 404 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#89
class Bugsnag::Api::NotFound < ::Bugsnag::Api::ClientError; end

# Raised when Bugsnag returns a 501 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#116
class Bugsnag::Api::NotImplemented < ::Bugsnag::Api::ServerError; end

# Raised when the api limit has been exceeded
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#107
class Bugsnag::Api::RateLimitExceeded < ::Bugsnag::Api::ClientError; end

# Faraday response middleware
#
# source://bugsnag-api//lib/bugsnag/api/response/raise_error.rb#7
module Bugsnag::Api::Response; end

# This class raises an Bugsnag-flavored exception based
# HTTP status codes returned by the API
#
# source://bugsnag-api//lib/bugsnag/api/response/raise_error.rb#11
class Bugsnag::Api::Response::RaiseError < ::Faraday::Response::RaiseError
  # source://bugsnag-api//lib/bugsnag/api/response/raise_error.rb#12
  def on_complete(response); end
end

# Raised on errors in the 500-599 range
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#110
class Bugsnag::Api::ServerError < ::Bugsnag::Api::Error; end

# Raised when Bugsnag returns a 503 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#122
class Bugsnag::Api::ServiceUnavailable < ::Bugsnag::Api::ServerError; end

# Raised when Bugsnag returns a 401 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#83
class Bugsnag::Api::Unauthorized < ::Bugsnag::Api::ClientError; end

# Raised when Bugsnag returns a 422 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#104
class Bugsnag::Api::UnprocessableEntity < ::Bugsnag::Api::ClientError; end

# Raised when Bugsnag returns a 414 HTTP status code
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#101
class Bugsnag::Api::UnsupportedMediaType < ::Bugsnag::Api::ClientError; end

# Raised when a method requires user-level credentials
# but none were provided
#
# source://bugsnag-api//lib/bugsnag/api/error.rb#133
class Bugsnag::Api::UserCredentialsRequired < ::StandardError; end

# source://bugsnag-api//lib/bugsnag/api/version.rb#3
Bugsnag::Api::VERSION = T.let(T.unsafe(nil), String)
