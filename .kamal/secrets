# Database Configuration
ANONYMIZE_SOURCE_DB_HOST=localhost
ANONYMIZE_SOURCE_DB_NAME=tramline_staging
ANONYMIZE_SOURCE_DB_PASSWORD=password
ANONYMIZE_SOURCE_DB_USER=postgres
DATABASE_URL=postgresql://postgres:password@localhost:5432/tramline_staging

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
DEFAULT_REDIS_URL=redis://localhost:6379/0
SESSION_REDIS_URL=redis://localhost:6379/0/session
SIDEKIQ_REDIS_URL=redis://localhost:6379/0

# App Configuration
APP_REDIRECT_MAPPING_JSON={"ueno-latest":"ueno"}
RAILS_MASTER_KEY=$RAILS_MASTER_KEY
HOST_NAME=localhost
RAILS_PIPELINE_ENV=staging

# Session Configuration
SESSION_TIMEOUT_IN_MINUTES=60

# Sidekiq Configuration
SIDEKIQ_CONCURRENCY=5
SIDEKIQ_TIMEOUT=25

# Integration URLs
BILLING_URL=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 BILLING_URL_STAGING_GCP)
APPLELINK_URL=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 APPLELINK_URL_STAGING_GCP)

# Build Configuration
ARTIFACT_BUILDS_BUCKET_NAME=artifact-builds-staging

# Error Handling
GRACEFUL_ERROR_PAGES=true

# Analytics & Monitoring
INTERCOM_APP_ID=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 INTERCOM_APP_ID_STAGING_GCP)
JUNE_ANALYTICS_KEY=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 JUNE_ANALYTICS_KEY_STAGING_GCP)
SENTRY_DSN=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 SENTRY_DSN_STAGING_GCP)
FRONTEND_SENTRY_DSN=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 FRONTEND_SENTRY_DSN_STAGING_GCP)
SENTRY_SECURITY_HEADER_ENDPOINT=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 SENTRY_SECURITY_HEADER_ENDPOINT_STAGING_GCP)

# Security & Access Control
DISALLOWED_SIGN_UP_DOMAINS=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 DISALLOWED_SIGN_UP_DOMAINS_STAGING_GCP)
CSP_REPORT_ONLY=false
CSP_CONNECT_SRC_URIS=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 CSP_CONNECT_SRC_URIS_STAGING_GCP)

# Descope Configuration
DESCOPE_MANAGEMENT_KEY=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 DESCOPE_MANAGEMENT_KEY_STAGING_GCP)
DESCOPE_PROJECT_ID=$(kamal secrets fetch --adapter=gcp --account=github-actions@decoded-theme-355014.iam.gserviceaccount.com --project=946207521855 DESCOPE_PROJECT_ID_STAGING_GCP)

# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.
# Option 1: Read secrets from the environment
# KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD
# Option 2: Read secrets via a command
# DATABASE_URL=$DATABASE_URL
# REDIS_URL=$REDIS_URL
# Option 3: Read secrets via kamal secrets helpers
# These will handle logging in and fetching the secrets in as few calls as possible
# There are adapters for 1Password, LastPass + Bitwarden
# SECRETS=$(kamal secrets fetch --adapter 1password --account my-account --from MyVault/MyItem KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD $SECRETS)
